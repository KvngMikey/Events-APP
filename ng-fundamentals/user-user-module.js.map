{"version":3,"sources":["./src/app/user/user.module.ts","./src/app/user/user.routes.ts","./src/app/user/login.component.html","./src/app/user/login.component.ts","./src/app/user/profile.component.ts","./src/app/user/profile.component.html"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { ProfileComponent } from \"./profile.component\";\r\nimport { userRoutes } from \"./user.routes\";\r\nimport { LoginComponent } from \"./login.component\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tRouterModule.forChild(userRoutes)\r\n\t],\r\n\r\n\tdeclarations: [\r\n\t\tProfileComponent,\r\n\t\tLoginComponent\r\n\t],\r\n\r\n\tproviders: [\r\n\r\n\t]\r\n})\r\n\r\nexport class UserModule {}","import { LoginComponent } from \"./login.component\";\r\nimport { ProfileComponent } from \"./profile.component\";\r\n\r\nexport const userRoutes = [\r\n\t{ path: 'profile', component: ProfileComponent},\r\n\t{ path: 'login', component: LoginComponent}\r\n]","<h1>Login</h1>\r\n<hr />\r\n<div class=\"col-md-4\">\r\n  <form\r\n    #loginForm=\"ngForm\"\r\n    (ngSubmit)=\"login(loginForm.value)\"\r\n    autocomplete=\"off\"\r\n  >\r\n    <div class=\"form-group\">\r\n      <label for=\"userName\">User Name:</label>\r\n      <em\r\n        *ngIf=\"\r\n          loginForm.controls.userName?.invalid &&\r\n          (loginForm.controls.userName?.touched || mouseoverLogin)\r\n        \"\r\n        >Required</em\r\n      >\r\n      <input\r\n        (ngModel)=\"(userName)\"\r\n        name=\"userName\"\r\n        required\r\n        id=\"userName\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"User Name...\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password:</label>\r\n      <em\r\n        *ngIf=\"\r\n          loginForm.controls.password?.invalid &&\r\n          (loginForm.controls.password?.touched || mouseoverLogin)\r\n        \"\r\n        >Required</em\r\n      >\r\n      <input\r\n        (ngModel)=\"(password)\"\r\n        name=\"password\"\r\n        required\r\n        id=\"password\"\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        placeholder=\"Password...\"\r\n      />\r\n    </div>\r\n\r\n    <span\r\n      (mouseenter)=\"mouseoverLogin = true\"\r\n      (mouseleave)=\"mouseoverLogin = false\"\r\n    >\r\n      <button\r\n        type=\"submit\"\r\n        [disabled]=\"loginForm.invalid\"\r\n        class=\"btn btn-primary\"\r\n      >\r\n        Login\r\n      </button>\r\n    </span>\r\n    <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\">\r\n      Cancel\r\n    </button>\r\n  </form>\r\n  <br />\r\n  <div *ngIf=\"loginInvalid\" class=\"alert alert-danger\">\r\n    Invalid login details\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styles: [\r\n    `\r\n      em {\r\n        float: right;\r\n        color: #e05c65;\r\n        padding-left: 10px;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class LoginComponent {\r\n  userName;\r\n  password;\r\n  mouseoverLogin;\r\n  loginInvalid = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  login(formValues) {\r\n    this.authService\r\n      .loginUser(formValues.userName, formValues.password)\r\n      .subscribe((resp) => {\r\n        if (!resp) {\r\n          this.loginInvalid = true;\r\n        } else {\r\n          this.router.navigate(['events']);\r\n        }\r\n      });\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['events']);\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Toastr, TOASTR_TOKEN } from '../common/toastr.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Component({\r\n  templateUrl: './profile.component.html',\r\n  styles: [\r\n    `\r\n  em{float: right; color: #E05C65; padding-left: 10px;}\r\n  .error input {background-color: #E3C3C5}\r\n  .error ::-webkit-input-placeholder {color: #999;}\r\n  .error ::-moz-placeholder { color: #999;}\r\n  .error :-moz-placeholder { color #999;}\r\n  .error :ms-input-placeholder { color: #999;}\r\n  `,\r\n  ],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profileForm: FormGroup;\r\n  private firstName: FormControl;\r\n  private lastName: FormControl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    @Inject(TOASTR_TOKEN) private toastr: Toastr\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.firstName = new FormControl(this.authService.currentUser.firstName, [\r\n      Validators.required,\r\n      Validators.pattern('[a-zA-Z].*'),\r\n    ]);\r\n    this.lastName = new FormControl(\r\n      this.authService.currentUser.lastName,\r\n      Validators.required\r\n    );\r\n    this.profileForm = new FormGroup({\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n    });\r\n  }\r\n\r\n  saveProfile(formValues) {\r\n    this.authService\r\n      .updateCurrentUser(formValues.firstName, formValues.lastName)\r\n      .subscribe(() => {\r\n        this.toastr.success('Profile saved successfully', 'Saved!');\r\n        this.router.navigate(['events']);\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout().subscribe(() => {\r\n      this.router.navigate(['/user/login']);\r\n    });\r\n  }\r\n\r\n  validateFirstName() {\r\n    return this.firstName.valid || this.firstName.untouched;\r\n  }\r\n\r\n  validateLastName() {\r\n    return this.lastName.valid || this.lastName.untouched;\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['events']);\r\n  }\r\n}\r\n","<div>\r\n  <h1>Edit Your Profile</h1>\r\n  <hr />\r\n  <div class=\"col-md-4\">\r\n    <form\r\n      [formGroup]=\"profileForm\"\r\n      (ngSubmit)=\"saveProfile(profileForm.value)\"\r\n      autocomplete=\"off\"\r\n      novalidate\r\n    >\r\n      <div class=\"form-group\" [ngClass]=\"{ error: !validateFirstName() }\">\r\n        <label for=\"firstName\">First Name:</label>\r\n        <em\r\n          *ngIf=\"\r\n            !validateFirstName() &&\r\n            profileForm.controls.firstName.errors.required\r\n          \"\r\n          >Required</em\r\n        >\r\n        <em\r\n          *ngIf=\"\r\n            !validateFirstName() &&\r\n            profileForm.controls.firstName.errors.pattern\r\n          \"\r\n          >Must start with a letter</em\r\n        >\r\n        <input\r\n          formControlName=\"firstName\"\r\n          id=\"firstName\"\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"First Name...\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\" [ngClass]=\"{ error: !validateLastName() }\">\r\n        <label for=\"lastName\">Last Name:</label>\r\n        <em *ngIf=\"!validateLastName()\">Required</em>\r\n        <input\r\n          formControlName=\"lastName\"\r\n          id=\"lastName\"\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          placeholder=\"Last Name...\"\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n      <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-default\">\r\n        Cancel\r\n      </button>\r\n\r\n      <button\r\n        type=\"button\"\r\n        (click)=\"logout()\"\r\n        class=\"btn btn-warning\"\r\n        style=\"float: right\"\r\n      >\r\n        Logout\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}